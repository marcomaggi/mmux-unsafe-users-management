\input texinfo.tex
@c %**start of header
@setfilename mmux-unsafe-users-management.info
@settitle MMUX Unsafe Users Management
@c %**end of header

@include version.texi
@include macros.texi

@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      MMUX Unsafe Users Management

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    MMUX Unsafe Users Management

@c To be used as @value{PACKAGE} whenever we need to include the
@c nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           mmux-unsafe-users-management

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{marco.maggi.ipsu@@poste.it}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2014

@c ------------------------------------------------------------

@set GITHUB_URL                 @url{http://github.com/marcomaggi/mmux-unsafe-users-management}
@set DOCUMENTATION_URL          @url{http://marcomaggi.github.com/docs/mmux-unsafe-users-management.html}

@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying
This document describes version @version{} of @value{PACKAGE}, a
distribution of @gnu{} Bash scripts; it provides utilities to handle
unsafe user accounts.  The package is distributed under the terms of the
@gnu{} General Public License (@gpl{}).

@noindent
Copyright @copyright{} @value{COPYRIGHT_YEARS} by @value{AUTHOR} @value{AUTHOR_EMAIL}

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the @gnu{} Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with
Invariant Sections being ``@gnu{} Free Documentation License'' and
``@gnu{} General Public License'', no Front--Cover Texts, and no
Back--Cover Texts.  A copy of the license is included in the section
entitled ``@gnu{} Free Documentation License''.
@end quotation
@end copying

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Revision @version{}
@author @value{AUTHOR} @value{AUTHOR_EMAIL}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* mmux-unsafe-users-management: (mmux-unsafe-users-management). @value{TITLE}.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying

@menu
* overview::                    Overview of the package.
* using::                       How to use the package.
* tips::                        Useful stuff to know.
* script::                      The command line utility that does it all.
* model::                       How unsafe users are associated to safe ones.

Appendices

* Package License::             GNU General Public License.
* Documentation License::       GNU Free Documentation License.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept.
@end menu
@end ifnottex

@c page
@node overview
@chapter Overview of the package


This document describes version @version{} of @value{PACKAGE}, a
distribution of @gnu{} Bash scripts; it proposes a model to manage
unsafe user profiles associated to safe user accounts on Slackware
GNU+Linux systems.  It depends upon the Marco's Bash Functions Library
(@acronym{MBFL}).  To use this package, the following system
requirements must be satisfied:

@itemize
@item
This package is meant to be used on computers for personal use, on which
only trusted users have accounts.  It introduces a security layer to run
applications under restricted privileges, with the purpose of partially
protect legitimate users from remote attacks.

@item
This package relies on the program @command{sudo} to allow users
creation and system mounting and unmounting to the users of the group
@samp{mmuxunsafeusers}; such policy is configured by the file:

@center @file{/etc/sudoers.d/mmux-unsafe-users-management.conf}

@noindent
which is installed on the system by this package: do not blindly accept
this configuration file!  Take a good look at it and make the necessary
changes for your host.

Remember that such sudoers file must be installed on the system with
octal access permissions @samp{0400}; the installation directory
@file{/etc/sudoers.d} must also have octal access permissions
@samp{0700}.  Such permissions @strong{cannot} be enforced by the
installation infrastructure of this package.

To enable loading of sudoers configuration modules: we have to include
the following line in the file @file{/etc/sudoers}:

@example
#includedir /etc/sudoers.d
@end example
@end itemize

With this system configuration, users that are members of the group
@code{mmuxunsafeusers} can: add and remove multiple unsafe users
accounts associated to a safe user; mount an unsafe user's home
directory under a directory of the associated safe user; enable unsafe
users to use a X Window server running under the safe user's
permissions.

@c page
@node using
@chapter How to use the package


The package @value{PACKAGE} installs the following scripts with access
permissions @code{0755}:

@example
/etc/mmux/bash_login.d/mmux-unsafe-users-management.sh
/etc/mmux/bash_logout.d/mmux-unsafe-users-management.sh
/etc/mmux/xinitrc.d/mmux-unsafe-users-management.sh
@end example

Every user that intends to use the facilities should add appropriate
shell commands in its home directory files:

@table @file
@item ~/.bash_login
Should contain:

@example
for mmux_login_script in /etc/mmux/bash_login.d/*.sh
do
  if test -x "$mmux_login_script"
  then source "$mmux_login_script"
  fi
done
unset mmux_login_script
@end example

@item ~/.bash_logout
Should contain:

@example
for mmux_logout_script in /etc/mmux/bash_logout.d/*.sh
do
  if test -x "$mmux_logout_script"
  then source "$mmux_logout_script"
  fi
done
unset mmux_logout_script
@end example

@item ~/.xinitrc
Should contain:

@example
for mmux_xinitrc_script in /etc/mmux/xinitrc.d/*.sh
do
  if test -x "$mmux_xinitrc_script"
  then source "$mmux_xinitrc_script"
  fi
done
unset mmux_xinitrc_script
@end example
@end table

Let's say the user @samp{marco}, which is part of the group
@code{mmuxunsafeusers}, wants to create the unsafe users accounts
@samp{marco-firefox} and @samp{marco-minecraft}; he has to issue the
commands:

@example
$ /usr/sbin/mmux-unsafe-users add marco-firefox -Smarco
$ /usr/sbin/mmux-unsafe-users add marco-minecraft -Smarco
@end example

@noindent
then create a file @file{~/.mmux-safe-users} holding the lines:

@example
marco-firefox
marco-minecraft
@end example

@noindent
finally log out and log back in.  Now he should be able to check the
unsafe users directories:

@smallexample
$ ls -l ~/var/unsafe-users/
drwxrws---  20 marco-firefox  marco-fi 4096 2014-10-11 10:22 marco-firefox
drwxrws---   6 marco-minecraf marco-mi 4096 2014-10-11 15:33 marco-minecraft
@end smallexample

@noindent
and mounts:

@smallexample
$ mount | grep unsafe-users
/home/unsafe-users/marco-firefox on /home/marco/var/unsafe-users/marco-firefox type none (rw,bind)
/home/unsafe-users/marco-minecraft on /home/marco/var/unsafe-users/marco-minecraft type none (rw,bind)
@end smallexample

@noindent
and the groups:

@example
$ groups
marco lp wheel floppy audio video cdrom tape plugdev scanner users marco-firefox marco-minecraft
@end example

If @samp{marco} wants to remove an unsafe user account,
@strong{including the unsafe user's home directory}, he can do:

@example
$ /usr/sbin/mmux-unsafe-users del marco-minecraft -Smarco
@end example

@noindent
and delete the corresponding entry from @file{~/.mmux-unsafe-users}.

To run programs under an unsafe user account, @code{marco} can do:

@example
$ sudo -u marco-firefox -H /opt/firefox/32.0.3/firefox
@end example

@noindent
or event better prepare a shell script holding something like:

@example
(set -x
  cd ~marco-firefox
  umask 0007
  sudo -u marco-firefox -H \
    /opt/firefox/32.0.3/firefox "$@@" \
    &>~marco-firefox/.FIREFOX-errors &)
@end example

@c page
@node tips
@chapter Useful stuff to know


While setting up applications to run under the unsafe user, we should
remember the following:

@itemize
@item
Prepare fonts configuration with @code{fontconfig}.  We must install in
the unsafe user's home directory a suitable @file{.fonts.conf} file and
build the fonts cache, else applications will not be able to use the
installed fonts.  For example the user @samp{marco} might do:

@example
$ cd ~marco
$ cp .fonts.conf /home/unsafe-users/marco-firefox
$ sudo -u marco-firefox /bin/bash
$ cd ~
$ fc-cache -f -v
@end example

@item
About web browsing with Mozilla Firefox: notice that it is possible to
setup full installation of Firefox for a normal user and then copy the
whole @file{~/.mozilla} directory to the home directory of the unsafe
user; just remember to change the ownership and access permissions:

@example
$ cp --recursive ~marco/.mozilla ~marco-firefox/
$ sudo chown marco-firefox ~marco-firefox/.mozilla --recursive
$ sudo chgrp marco-firefox ~marco-firefox/.mozilla --recursive
$ sudo chmod g=u,o-rwx ~marco-firefox/.mozilla --recursive
@end example
@end itemize

@c page
@node script
@chapter The command line utility that does it all


Unsafe users are managed with the @command{mmux-unsafe-users} command
line utility; it should be installed under @file{/usr/sbin}.  Each user
must prepare a list of unsafe users associated to a safe user account in
the file @file{~/.mmux-unsafe-users}, one unsafe user name for each
line.

Synopsis:

@example
mmux-unsafe-users [action] [options]
@end example

Action commands:

@table @code
@item add UNSAFE-USERNAME --safe-user=SAFE-USERNAME [options]
Add an unsafe user associated to the selected safe user.

@item del UNSAFE-USERNAME --safe-user=SAFE-USERNAME [options]
Delete an unsafe user associated to the selected safe user.

@item bind [options]
Mount unsafe users home directories under a safe user safe one.

@item unbind [options]
Mount unsafe users home directories under a safe user safe one.

@item enable-x [options]
Enable unsafe users running X applications in a safe user X server.

@item disable-x [options]
Enable unsafe users running X applications in a safe user X server.

@item help [options]
Print help screen and exit.
@end table

Options:

@table @code
@item -S@var{SAFE-USERNAME}
@item --safe-user=@var{SAFE-USERNAME}
Select the safe user associated to the unsafe user.
@end table

@c page
@node model
@chapter How unsafe users are associated to safe ones


This chapter examines how the unsafe user accounts are created, deleted
and managed by the command line utility @command{mmux-unsafe-users}.

@menu
* model permissions::           Restricting usage of this package.
* model creation::              How to add an unsafe user account.
* model deletion::              How to delete an unsafe user account.
* model bindings::              How unsafe users home directories are
                                bound.
* model xhost::                 Enabling and disabling running X
                                applications.
@end menu

@c page
@node model permissions
@section Restricting usage of this package


By default, the @file{sudoers.d} file requires users to belong to the
group @code{mmuxunsafeusers} to be able to run the script; we must add
to this group all the users that are meant to use this package.

The distribution comes with a script @file{meta/slackware/doinst.sh}
that can be run to create the group and adjust the access permissions of
the installed files.  It is usable, in fact, as Slackware package
installation script.

@c page
@node model creation
@section How to add an unsafe user account


The root directory of the unsafe user's home directory is created with:

@example
$SUDO /usr/bin/install -m 0755 -o root -g root \
   /home/unsafe-users
@end example

Let's take as example the unsafe user @samp{marco-firefox} associated to
the safe user @samp{marco}.  Unsafe users accounts are created with the
command:

@example
$SUDO /usr/sbin/useradd \
   --base-dir     /home/unsafe-users                    \
   --home         /home/unsafe-users/marco-firefox      \
   --create-home                                        \
   --user-group                                         \
   --groups       audio,video                           \
   --shell        /bin/false                            \
   marco-firefox
@end example

@noindent
notice that an unsafe user's account @strong{must not} be part of the
normal users' groups; rather it should be part of the smallest possible
number of groups needed to run the desired applications.

The access permissions of the unsafe user's home directory are modified
as follows:

@example
$SUDO /bin/chmod 2770 \
   /home/unsafe-users/marco-firefox
@end example

@noindent
the directory is setgid, so all the files created in it are
automatically set to the group of the unsafe user.

The safe user is added to the group of the unsafe user:

@example
$SUDO /usr/sbin/usermod marco \
   --append --groups marco-firefox
@end example

@noindent
this way the safe user can access the files in the home directory of the
unsafe user.@footnote{We have to remember that this group addition will
become effecting after the safe user has logged out and logged back in.}

@c page
@node model deletion
@section How to delete an unsafe user account


Let's take as example the unsafe user @samp{marco-firefox} associated to
the safe user @samp{marco}.  The unsafe user account and it home
directory are removed with:

@example
$SUDO /usr/sbin/userdel marco-firefox --remove
@end example

The unsafe user group is removed with:

@example
$SUDO /usr/sbin/groupdel marco-firefox
@end example

@c page
@node model bindings
@section How unsafe users home directories are bound


Even though it is always possible to reference an unsafe user's home
directory with the tilde syntax:

@example
~marco-firefox
@end example

@noindent
which is a nice and short syntax, with this package the unsafe user's
home directory is mounted under a subdirectory of the safe user's home
directory.

Let's take as example the unsafe user @samp{marco-firefox} associated to
the safe user @samp{marco}.  When it does not already exist, the mount
point is created with:

@example
/usr/bin/install -m 0700 -d ~/var/unsafe-users/marco-firefox
@end example

The unsafe user's home directory is mounted with:

@example
$SUDO /bin/mount --bind \
   /home/unsafe-users/marco-firefox \
   /home/marco/var/unsafe-users/marco-firefox
@end example

@noindent
and unmounted with:

@example
$SUDO /bin/umount \
   /home/marco/var/unsafe-users/marco-firefox
@end example

The binding operation is performed for each unsafe user name listed in
the file @file{~/.mmux-unsafe-users}.

@c page
@node model xhost
@section Enabling and disabling running X applications


X Window host access control is enabled with:

@example
/usr/bin/xhost -
@end example

Let's take as example the unsafe user @samp{marco-firefox} associated to
the safe user @samp{marco}.  The unsafe user is allowed to run X
applications under a server owned by the safe user with:

@example
/usr/bin/xhost +local:marco-firefox
@end example

@noindent
and disallowed with:

@example
/usr/bin/xhost -local:marco-firefox
@end example

The allow operation is performed for each unsafe user name listed in the
file @file{~/.mmux-unsafe-users}.

@c page
@c ------------------------------------------------------------
@c Appendices.
@c ------------------------------------------------------------

@include gpl-3.0.texi
@include fdl-1.3.texi

@c page
@node references
@appendix Bibliography and references


The documentation of @value{PACKAGE} is available online:

@center @value{DOCUMENTATION_URL}

@noindent
the latest version of this package can be downloaded from:

@center @value{GITHUB_URL}

@c page
@node concept index
@appendix An entry for each concept

@printindex cp

@contents
@bye

@c end of file

